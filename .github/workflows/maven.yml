# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: EL-Backend
on:
  push:
    branches: 
      - main
    paths:
      - 'el-back/**'
  pull_request:
    branches: 
      - main
    paths:
      - 'el-back/**'

jobs:
  build:

    runs-on: el-back-end

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Set environment variables
      env:
        EL_DATABASE_URL: ${{ secrets.EL_DATABASE_URL }}
        EL_DATABASE_USERNAME: ${{ secrets.EL_DATABASE_USERNAME }}
        EL_DATABASE_PASSWORD: ${{ secrets.EL_DATABASE_PASSWORD }}
        PUBLIC_SERVICEKEY: ${{ secrets.PUBLIC_SERVICEKEY }}
      run: |
        echo "EL_DATABASE_URL=${{ secrets.EL_DATABASE_URL }}" >> $GITHUB_ENV
        echo "EL_DATABASE_USERNAME=${{ secrets.EL_DATABASE_USERNAME }}" >> $GITHUB_ENV
        echo "EL_DATABASE_PASSWORD=${{ secrets.EL_DATABASE_PASSWORD }}" >> $GITHUB_ENV
        echo "PUBLIC_SERVICEKEY=${{ secrets.PUBLIC_SERVICEKEY }}" >> $GITHUB_ENV
    - name: Build with Maven
      run: mvn -B package --file el-back/pom.xml